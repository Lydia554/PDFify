// utils/zugferdHelper.js

const { format } = require("date-fns");

function generateZugferdXML(data) {
  const now = new Date();
  const invoiceDate = data.date ? new Date(data.date) : now;

  // Helper function for formatting date as YYYY-MM-DD
  const fmtDate = (date) => format(date, "yyyy-MM-dd");

  // Format monetary amounts as string with 2 decimals, dot separator
  const fmtAmount = (num) => Number(num).toFixed(2);

  // Calculate totals fallback
  const subtotal = fmtAmount(data.subtotal || data.items?.reduce((acc, i) => acc + (i.total || 0), 0));
  const tax = fmtAmount(data.tax || (subtotal * 0.21));
  const total = fmtAmount(data.total || (parseFloat(subtotal) + parseFloat(tax)));

  // Generate XML
  return `<?xml version="1.0" encoding="UTF-8"?>
<rsm:CrossIndustryInvoice xmlns:rsm="urn:ferd:CrossIndustryDocument:invoice:1p0"
                          xmlns:ram="urn:un:unece:uncefact:data:standard:ReusableAggregateBusinessInformationEntity:12"
                          xmlns:qdt="urn:un:unece:uncefact:data:standard:QualifiedDataType:12"
                          xmlns:udt="urn:un:unece:uncefact:data:standard:UnqualifiedDataType:15"
                          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <rsm:ExchangedDocumentContext>
    <ram:GuidelineSpecifiedDocumentContextParameter>
      <ram:ID>urn:ferd:CrossIndustryDocument:invoice:1p0:basic</ram:ID>
    </ram:GuidelineSpecifiedDocumentContextParameter>
  </rsm:ExchangedDocumentContext>

  <rsm:ExchangedDocument>
    <ram:ID>${data.orderId || 'INV-0001'}</ram:ID>
    <ram:TypeCode>380</ram:TypeCode> <!-- Invoice -->
    <ram:IssueDateTime>
      <udt:DateTimeString format="102">${fmtDate(invoiceDate).replace(/-/g, '')}</udt:DateTimeString>
    </ram:IssueDateTime>
    <ram:IncludedNote>
      <ram:Content>ZUGFeRD Invoice generated by PDFify</ram:Content>
    </ram:IncludedNote>
  </rsm:ExchangedDocument>

  <rsm:SupplyChainTradeTransaction>
    <ram:ApplicableHeaderTradeAgreement>
      <ram:SellerTradeParty>
        <ram:Name>${data.sellerName || "Your Company Name"}</ram:Name>
        <ram:PostalTradeAddress>
          <ram:PostcodeCode>${data.sellerPostcode || "00000"}</ram:PostcodeCode>
          <ram:LineOne>${data.sellerAddress || "Seller Address"}</ram:LineOne>
          <ram:CityName>${data.sellerCity || "Seller City"}</ram:CityName>
          <ram:CountryID>${data.sellerCountry || "DE"}</ram:CountryID>
        </ram:PostalTradeAddress>
        <ram:SpecifiedTaxRegistration>
          <ram:ID schemeID="FC">DE123456789</ram:ID>
        </ram:SpecifiedTaxRegistration>
      </ram:SellerTradeParty>

      <ram:BuyerTradeParty>
        <ram:Name>${data.customerName || "Customer"}</ram:Name>
        <ram:PostalTradeAddress>
          <ram:PostcodeCode>${data.customerPostcode || "00000"}</ram:PostcodeCode>
          <ram:LineOne>${data.customerAddress || "Customer Address"}</ram:LineOne>
          <ram:CityName>${data.customerCity || "Customer City"}</ram:CityName>
          <ram:CountryID>${data.customerCountry || "DE"}</ram:CountryID>
        </ram:PostalTradeAddress>
      </ram:BuyerTradeParty>
    </ram:ApplicableHeaderTradeAgreement>

    <ram:ApplicableHeaderTradeDelivery>
      <ram:ActualDeliverySupplyChainEvent>
        <ram:OccurrenceDateTime>
          <udt:DateTimeString format="102">${fmtDate(invoiceDate).replace(/-/g, '')}</udt:DateTimeString>
        </ram:OccurrenceDateTime>
      </ram:ActualDeliverySupplyChainEvent>
    </ram:ApplicableHeaderTradeDelivery>

    <ram:ApplicableHeaderTradeSettlement>
      <ram:InvoiceCurrencyCode>${data.currency || "EUR"}</ram:InvoiceCurrencyCode>
      <ram:SpecifiedTradeSettlementPaymentMeans>
        <ram:TypeCode>42</ram:TypeCode> <!-- Payment by invoice -->
      </ram:SpecifiedTradeSettlementPaymentMeans>
      <ram:ApplicableTradeTax>
        <ram:CalculatedAmount currencyID="${data.currency || "EUR"}">${tax}</ram:CalculatedAmount>
        <ram:TypeCode>VAT</ram:TypeCode>
        <ram:CategoryCode>S</ram:CategoryCode>
        <ram:RateApplicablePercent>21</ram:RateApplicablePercent>
      </ram:ApplicableTradeTax>
      <ram:SpecifiedTradeSettlementMonetarySummation>
        <ram:LineTotalAmount currencyID="${data.currency || "EUR"}">${subtotal}</ram:LineTotalAmount>
        <ram:TaxTotalAmount currencyID="${data.currency || "EUR"}">${tax}</ram:TaxTotalAmount>
        <ram:GrandTotalAmount currencyID="${data.currency || "EUR"}">${total}</ram:GrandTotalAmount>
      </ram:SpecifiedTradeSettlementMonetarySummation>
    </ram:ApplicableHeaderTradeSettlement>

    <ram:IncludedSupplyChainTradeLineItem>
      ${data.items?.map((item, idx) => `
      <ram:AssociatedDocumentLineDocument>
        <ram:LineID>${idx + 1}</ram:LineID>
        <ram:IncludedNote>
          <ram:Content>${item.description || item.name || "Item description"}</ram:Content>
        </ram:IncludedNote>
      </ram:AssociatedDocumentLineDocument>
      <ram:SpecifiedTradeProduct>
        <ram:Name>${item.name || "Product"}</ram:Name>
      </ram:SpecifiedTradeProduct>
      <ram:SpecifiedLineTradeAgreement>
        <ram:GrossPriceProductTradePrice>
          <ram:ChargeAmount currencyID="${data.currency || "EUR"}">${fmtAmount(item.price || 0)}</ram:ChargeAmount>
        </ram:GrossPriceProductTradePrice>
      </ram:SpecifiedLineTradeAgreement>
      <ram:SpecifiedLineTradeDelivery>
        <ram:BilledQuantity unitCode="${item.unit || "C62"}">${item.quantity || 1}</ram:BilledQuantity>
      </ram:SpecifiedLineTradeDelivery>
      <ram:SpecifiedLineTradeSettlement>
        <ram:ApplicableTradeTax>
          <ram:TypeCode>VAT</ram:TypeCode>
          <ram:CategoryCode>S</ram:CategoryCode>
          <ram:RateApplicablePercent>21</ram:RateApplicablePercent>
          <ram:CalculatedAmount currencyID="${data.currency || "EUR"}">${fmtAmount((item.price || 0) * (item.quantity || 1) * 0.21)}</ram:CalculatedAmount>
        </ram:ApplicableTradeTax>
        <ram:TradeSettlementLineAmount currencyID="${data.currency || "EUR"}">${fmtAmount((item.price || 0) * (item.quantity || 1))}</ram:TradeSettlementLineAmount>
      </ram:SpecifiedLineTradeSettlement>
      `).join('')}
    </ram:IncludedSupplyChainTradeLineItem>
  </rsm:SupplyChainTradeTransaction>
</rsm:CrossIndustryInvoice>`;
}

module.exports = { generateZugferdXML };
